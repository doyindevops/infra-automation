name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  TF_VAR_env_prefix: "dev"
  TF_VAR_runner_registration_token: ${{ secrets.RUNNER_TOKEN }}
  TF_VAR_github_repo: ${{ secrets.GITHUB_REPO }}

jobs:
  init:
    name: Terraform Init
    runs-on: self-hosted
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set Permissions
        run: sudo chmod -R 777 $(pwd)

      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Terraform Init
        run: |
          docker run --rm \
          -u $(id -u):$(id -g) \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e TF_VAR_env_prefix="${{ env.TF_VAR_env_prefix }}" \
          -e TF_VAR_runner_registration_token="${{ secrets.RUNNER_TOKEN }}" \
          -e TF_VAR_github_repo="${{ secrets.GITHUB_REPO }}" \
          -v $(pwd):/workspace \
          -w /workspace \
          hashicorp/terraform:latest init -upgrade

      - name: Upload Terraform Init Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: terraform-init
          path: |
            .terraform/
            .terraform.lock.hcl

  validate:
    name: Terraform Validate
    runs-on: self-hosted
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    needs: init
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set Permissions
        run: sudo chmod -R 777 $(pwd)

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Init Artifacts
        uses: actions/download-artifact@v2
        with:
          name: terraform-init

      - name: Terraform Validate
        run: |
          docker run --rm \
          -u $(id -u):$(id -g) \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e TF_VAR_env_prefix="${{ env.TF_VAR_env_prefix }}" \
          -e TF_VAR_runner_registration_token="${{ secrets.RUNNER_TOKEN }}" \
          -e TF_VAR_github_repo="${{ secrets.GITHUB_REPO }}" \
          -v $(pwd):/workspace \
          -w /workspace \
          hashicorp/terraform:latest validate
        continue-on-error: true

  tfsec:
    name: tfsec Security Scan
    runs-on: self-hosted
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    needs: init
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set Permissions
        run: sudo chmod -R 777 $(pwd)

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: tfsec Scan
        run: |
          docker run --rm \
          -u $(id -u):$(id -g) \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e TF_VAR_env_prefix="${{ env.TF_VAR_env_prefix }}" \
          -e TF_VAR_runner_registration_token="${{ secrets.RUNNER_TOKEN }}" \
          -e TF_VAR_github_repo="${{ secrets.GITHUB_REPO }}" \
          -v $(pwd):/workspace \
          -w /workspace \
          aquasec/tfsec:latest . --format json --out tfsec.json
        continue-on-error: true

      - name: Upload tfsec Scan Results
        uses: actions/upload-artifact@v2
        with:
          name: tfsec-scan
          path: tfsec.json

  build:
    name: Terraform Plan
    runs-on: self-hosted
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    needs: validate
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set Permissions
        run: sudo chmod -R 777 $(pwd)

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Init Artifacts
        uses: actions/download-artifact@v2
        with:
          name: terraform-init

      - name: Terraform Plan
        run: |
          docker run --rm \
          -u $(id -u):$(id -g) \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e TF_VAR_env_prefix="${{ env.TF_VAR_env_prefix }}" \
          -e TF_VAR_runner_registration_token="${{ secrets.RUNNER_TOKEN }}" \
          -e TF_VAR_github_repo="${{ secrets.GITHUB_REPO }}" \
          -v $(pwd):/workspace \
          -w /workspace \
          hashicorp/terraform:latest plan -out planfile

      - name: Upload Planfile
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan
          path: planfile

  deploy:
    name: Terraform Apply
    runs-on: self-hosted
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set Permissions
        run: sudo chmod -R 777 $(pwd)

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Init Artifacts
        uses: actions/download-artifact@v2
        with:
          name: terraform-init

      - name: Download Planfile
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan

      - name: Terraform Apply
        run: |
          docker run --rm \
          -u $(id -u):$(id -g) \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e TF_VAR_env_prefix="${{ env.TF_VAR_env_prefix }}" \
          -e TF_VAR_runner_registration_token="${{ secrets.RUNNER_TOKEN }}" \
          -e TF_VAR_github_repo="${{ secrets.GITHUB_REPO }}" \
          -v $(pwd):/workspace \
          -w /workspace \
          hashicorp/terraform:latest apply -input=false planfile
